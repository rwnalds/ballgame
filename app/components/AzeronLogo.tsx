/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { JSX, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh
    mesh_1: THREE.Mesh
    mesh_2: THREE.Mesh
    mesh_3: THREE.Mesh
  }
  materials: {}
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Azeron-icon_Blue_on_Transparent.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[-9.851, 8.805, 9.851]}>
        <group rotation={[0, Math.PI / 4, 0]} scale={[0.195, -0.195, 0.195]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.mesh_0.geometry}
            material={nodes.mesh_0.material}
            position={[-184.666, -180.8, -33]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.mesh_1.geometry}
            material={nodes.mesh_1.material}
            position={[-184.666, -180.8, -33]}
            scale={[1.01, 1.01, 1.06]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.mesh_2.geometry}
            material={nodes.mesh_2.material}
            position={[-184.666, -180.8, -33]}
            scale={[1.01, 1.01, 1.06]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.mesh_3.geometry}
            material={nodes.mesh_3.material}
            position={[-184.666, -180.8, -33]}
            scale={[1.01, 1.01, 1.06]}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/Azeron-icon_Blue_on_Transparent.glb')